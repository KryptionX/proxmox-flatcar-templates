variant: flatcar
version: 1.0.0

passwd:
  users:
    - name: core
      groups: [sudo, docker]
      ssh_authorized_keys:
        - ${SSH_PUBLIC_KEY}
      # Generate with: openssl passwd -1 -salt yoursalt yourpassword
      password_hash: "${USER_PASSWORD_HASH}"

storage:
  directories:
    # Container workloads directory
    - path: /opt/containers
      mode: 0755
      user:
        name: core
      group:
        name: core
    
    # NFS Mount Points - Primary Servers
    - path: ${SPEEDFORCE_MOUNT_POINT}
      mode: 0755
    - path: ${ZEPHYR_MEDIA_MOUNT}
      mode: 0755
    - path: ${ZEPHYR_LYNDA_MOUNT}
      mode: 0755
    - path: ${ZEPHYR_XMEDIA_MOUNT}
      mode: 0755
    - path: ${ZEPHYR_JOHNNY_MOUNT}
      mode: 0755
    - path: ${SOLO_SSD_MOUNT_POINT}
      mode: 0755
    
    # NFS Mount Points - Immich Gateway
    - path: ${IMMICH_PHOTOS_MOUNT_POINT}
      mode: 0755
    - path: ${IMMICH_DB_MOUNT_POINT}
      mode: 0755
    - path: ${IMMICH_SYNC_MOUNT_POINT}
      mode: 0755

  files:
    # Custom MOTD - Proxmox by KryptionX
    - path: /etc/motd
      mode: 0644
      contents:
        inline: |
                        THE WAY OF THE FUTURE                  
            _  __                 _   _            __  __
           | |/ /_ __ _   _ _ __ | |_(_) ___  _ __ \ \/ /
           | ' /| '__| | | | '_ \| __| |/ _ \| '_ \ \  / 
           | . \| |  | |_| | |_) | |_| | (_) | | | |/  \ 
           |_|\_\_|   \__, | .__/ \__|_|\___/|_| |_/_/\_\
                      |___/|_|                           

systemd:
  units:
    # =========================================================================
    # PRIMARY NFS SERVERS
    # =========================================================================
    
    # speedforce - Configuration Server
    - name: speedforce.mount
      enabled: true
      contents: |
        [Unit]
        Description=Mount speedforce NFS configuration server
        After=network-online.target
        Wants=network-online.target
        [Mount]
        What=${SPEEDFORCE_SERVER}:/
        Where=${SPEEDFORCE_MOUNT_POINT}
        Type=nfs
        Options=${SPEEDFORCE_OPTIONS}
        [Install]
        WantedBy=multi-user.target

    # Zephyr Media Library (Granular Security)
    - name: zephyr-media.mount
      enabled: true
      contents: |
        [Unit]
        Description=Mount Zephyr Media library
        After=network-online.target
        Wants=network-online.target
        [Mount]
        What=${ZEPHYR_SERVER}:${ZEPHYR_MEDIA_PATH}
        Where=${ZEPHYR_MEDIA_MOUNT}
        Type=nfs
        Options=${ZEPHYR_OPTIONS}
        [Install]
        WantedBy=multi-user.target

    # Zephyr Lynda Educational Content
    - name: zephyr-lynda.mount
      enabled: true
      contents: |
        [Unit]
        Description=Mount Zephyr Lynda educational content
        After=network-online.target
        Wants=network-online.target
        [Mount]
        What=${ZEPHYR_SERVER}:${ZEPHYR_LYNDA_PATH}
        Where=${ZEPHYR_LYNDA_MOUNT}
        Type=nfs
        Options=${ZEPHYR_OPTIONS}
        [Install]
        WantedBy=multi-user.target

    # Zephyr xMedia (Adult Content)
    - name: zephyr-xmedia.mount
      enabled: true
      contents: |
        [Unit]
        Description=Mount Zephyr xMedia content
        After=network-online.target
        Wants=network-online.target
        [Mount]
        What=${ZEPHYR_SERVER}:${ZEPHYR_XMEDIA_PATH}
        Where=${ZEPHYR_XMEDIA_MOUNT}
        Type=nfs
        Options=${ZEPHYR_OPTIONS}
        [Install]
        WantedBy=multi-user.target

    # Zephyr Personal Data (Johnny)
    - name: zephyr-johnny.mount
      enabled: true
      contents: |
        [Unit]
        Description=Mount Zephyr Johnny personal data
        After=network-online.target
        Wants=network-online.target
        [Mount]
        What=${ZEPHYR_SERVER}:${ZEPHYR_JOHNNY_PATH}
        Where=${ZEPHYR_JOHNNY_MOUNT}
        Type=nfs
        Options=${ZEPHYR_OPTIONS}
        [Install]
        WantedBy=multi-user.target

    # solo-ssd Download Staging
    - name: solo-ssd.mount
      enabled: true
      contents: |
        [Unit]
        Description=Mount solo-ssd download staging
        After=network-online.target
        Wants=network-online.target
        [Mount]
        What=${SOLO_SSD_SERVER}:/
        Where=${SOLO_SSD_MOUNT_POINT}
        Type=nfs
        Options=${SOLO_SSD_OPTIONS}
        [Install]
        WantedBy=multi-user.target

    # =========================================================================
    # IMMICH GATEWAY MOUNTS (via thanosDirect)
    # =========================================================================

    # Immich Photos (via thanosDirect -> Zephyr)
    - name: immich-photos.mount
      enabled: true
      contents: |
        [Unit]
        Description=Mount Immich photo storage via thanosDirect
        After=network-online.target
        Wants=network-online.target
        [Mount]
        What=${THANOS_DIRECT_IP}:${IMMICH_PHOTOS_NFS_PATH}
        Where=${IMMICH_PHOTOS_MOUNT_POINT}
        Type=nfs
        Options=${IMMICH_PHOTOS_OPTIONS}
        [Install]
        WantedBy=multi-user.target

    # Immich Database (via thanosDirect -> speedforce)
    - name: immich-database.mount
      enabled: true
      contents: |
        [Unit]
        Description=Mount Immich database via thanosDirect
        After=network-online.target
        Wants=network-online.target
        [Mount]
        What=${THANOS_DIRECT_IP}:${IMMICH_DB_NFS_PATH}
        Where=${IMMICH_DB_MOUNT_POINT}
        Type=nfs
        Options=${IMMICH_DB_OPTIONS}
        [Install]
        WantedBy=multi-user.target

    # Immich Sync (via thanosDirect -> Zephyr, read-only)
    - name: immich-sync.mount
      enabled: true
      contents: |
        [Unit]
        Description=Mount Immich sync storage via thanosDirect
        After=network-online.target
        Wants=network-online.target
        [Mount]
        What=${THANOS_DIRECT_IP}:${IMMICH_SYNC_NFS_PATH}
        Where=${IMMICH_SYNC_MOUNT_POINT}
        Type=nfs
        Options=${IMMICH_SYNC_OPTIONS}
        [Install]
        WantedBy=multi-user.target

    # =========================================================================
    # SYSTEM SERVICES
    # =========================================================================

    # NFS Mount Health Check
    - name: nfs-health-check.service
      enabled: true
      contents: |
        [Unit]
        Description=NFS Mount Health Check
        After=multi-user.target
        Wants=speedforce.mount zephyr-media.mount zephyr-lynda.mount zephyr-xmedia.mount zephyr-johnny.mount solo-ssd.mount
        [Service]
        Type=oneshot
        ExecStart=/bin/bash -c 'findmnt -t nfs | grep -E "(speedforce|Zephyr|solo-ssd|thanosDirect)" && echo "‚úÖ All NFS mounts healthy"'
        RemainAfterExit=yes
        [Install]
        WantedBy=multi-user.target

    # Docker Service Readiness
    - name: docker-ready.service
      enabled: true
      contents: |
        [Unit]
        Description=Verify Docker is ready for containers
        After=docker.service nfs-health-check.service
        Wants=docker.service nfs-health-check.service
        [Service]
        Type=oneshot
        ExecStart=/usr/bin/docker info
        ExecStartPost=/bin/echo "üê≥ Docker ready for container workloads"
        RemainAfterExit=yes
        [Install]
        WantedBy=multi-user.target

    # Container Infrastructure Readiness
    - name: container-infrastructure.service
      enabled: true
      contents: |
        [Unit]
        Description=Container Infrastructure Readiness Check
        After=docker-ready.service
        Wants=docker-ready.service
        [Service]
        Type=oneshot
        ExecStart=/bin/bash -c 'echo "üöÄ Container infrastructure ready:"; echo "  ‚Ä¢ NFS mounts: $(findmnt -t nfs | wc -l) active"; echo "  ‚Ä¢ Docker: $(docker --version)"; echo "  ‚Ä¢ Storage: $(df -h | grep nfs | wc -l) NFS volumes"'
        RemainAfterExit=yes
        [Install]
        WantedBy=multi-user.target 